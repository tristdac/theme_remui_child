{{!
    This file is part of Moodle - http://moodle.org/

    Moodle is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Moodle is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
}}
{{!
    @template theme_remui/columns2

    Admin time setting template.

    remui 2 column layout template.

    Context variables required for this template:
    * sitename - The name of the site
    * output - The core renderer for the page
    * bodyattributes - attributes for the body tag as a string of html attributes
    * sidepreblocks - HTML for the blocks
    * hasblocks - true if there are blocks on this page
    * navdraweropen - true if the nav drawer should be open on page load
    * regionmainsettingsmenu - HTML for the region main settings menu
    * hasregionmainsettingsmenu - There is a region main settings menu on this page.

    Example context (json):
    {
        "sitename": "Moodle",
        "output": {
            "doctype": "<!DOCTYPE html>",
            "page_title": "Test page",
            "favicon": "favicon.ico",
            "main_content": "<h1>Headings make html validators happier</h1>"
         },
        "bodyattributes":"",
        "sidepreblocks": "<h2>Blocks html goes here</h2>",
        "hasblocks":true,
        "navdraweropen":true,
        "regionmainsettingsmenu": "",
        "hasregionmainsettingsmenu": false
    }
}}
{{> theme_remui/common_start }}

<section id="region-main" {{#hasblocks}}class="has-blocks mb-3"{{/hasblocks}} aria-label="{{#str}}content{{/str}}">
    
    {{#enrollmentpage}}
        <!-- Common things -->
        {{#hasregionmainsettingsmenu}}
            <div class="region_main_settings_menu_proxy"></div>
        {{/hasregionmainsettingsmenu}}
        {{{ output.course_content_header }}}
        <!-- Common things -->

        <!-- Enrolment page things -->
        {{>  theme_remui/enrolpageextension}}
        <!-- Enrolment page things -->

        <!-- Common things -->
        {{{ output.activity_navigation }}}
        {{{ output.course_content_footer }}}
        <!-- Common things -->
    {{/enrollmentpage}}
    
    {{^enrollmentpage}}
    <div class="card card-body {{#enrollmentpage}}enrol-card{{/enrollmentpage}}">
        {{#hasregionmainsettingsmenu}}
            <div class="region_main_settings_menu_proxy"></div>
        {{/hasregionmainsettingsmenu}}
        {{{ output.course_content_header }}}
        {{{ output.main_content }}}
        {{{ output.activity_navigation }}}
        {{{ output.course_content_footer }}}
    </div>
    {{/enrollmentpage}}
</section>

{{> theme_remui/common_end }}
{{#js}}
require(['jquery'], function ($) {
    $(document).ready(function() {
        if (document.getElementById("page-mod-assign-grading")) {
            var buttarget = document.querySelector('#page-mod-assign-grading .form-inline');
            var modbut = document.createElement('div');
            modbut.innerHTML =  '<br><div class="clearfix"></div><button id="fs_qgrading_btn" type="button" class="btn btn-success" data-toggle="modal" data-target="#fs_qgrading"><i class="fa fa-expand"></i> Pop-out Quick Grader</button><br><div class="clearfix"></div>';
            buttarget.parentNode.insertBefore( modbut, buttarget.nextSibling);
            var invoke_run_once = true;
            document.getElementById('fs_qgrading_btn').onclick = function(e){
              if (invoke_run_once) {
                var itm = document.querySelector('#page-mod-assign-grading .boxaligncenter');
                var cln = itm.cloneNode(true);
                var target = document.body;
                var div = document.createElement('div');
                div.innerHTML =  '<div id="fs_qgrading" class="modal fade" role="dialog"><div class="modal-dialog" style="display: contents;width: 100%;height: 100%;margin: 0;padding: 0;"><div class="modal-content" style="text-align: center;height: auto;min-height: 100%;border-radius: 0;"><div id="fs_qgrading_body" class="modal-body"></div><div class="modal-footer"><button type="button" class="btn btn-primary" data-dismiss="modal">Close</button></div></div></div></div>';
                target.parentNode.insertBefore( div, target.nextSibling );
                document.getElementById("fs_qgrading_body").appendChild(cln);
                invoke_run_once = false;
              }
            }
            var elem = document.querySelector('#page-mod-assign-grading .boxaligncenter .no-overflow');
            var w = elem.offsetWidth;
            var wint = parseInt(w, 10);
            var itm = document.querySelector('#page-mod-assign-grading .boxaligncenter tbody');
            var width = itm.offsetWidth;
            var widthint = parseInt(width, 10);
            if (widthint > wint) {
                var target = document.querySelector('#page-mod-assign-grading .boxaligncenter .no-overflow');
                var div = document.createElement('div');
                div.innerHTML =  '<div class="scrolltoleft gradescroll" onclick="return false;"><i class="fa fa-chevron-left"></i></div><div class="scrolltoright gradescroll" onclick="return false;"><i class="fa fa-chevron-right"></i></div>';
                target.parentNode.insertBefore( div, target);
                document.querySelector('.scrolltoright').onclick = function(e){
                    elem.scrollLeft = widthint + wint;
                }
                document.querySelector('.scrolltoleft').onclick = function(e){
                    elem.scrollLeft = wint - widthint;
                }
            }
        }
    });
});

require(['theme_remui/loader', 'theme_remui/TimeCircles'], function (loader, TimeCircles) {
    Breakpoints();

    // quiz time circles for timed quizzes
    jQuery("#quiztimer").TimeCircles({
        time: {
            Days: {
                show: false
            },
            Hours: {
                color: "#3c8dbc"
            },
            Minutes: {
                color: "#00a65a"
            },
            Seconds: {
                color: "#f56954"
            }
        },
        bg_width: 0.9,
        fg_width: 0.1,
        circle_bg_color: "#797D82",
        number_size: 0.24,
        text_size: 0.11,
        refresh_interval: 1,
        animation_interval: "ticks"
    }).addListener(quizTimeEllapsed);

    // listner for quiz timer
    function quizTimeEllapsed(unit, value, total) {
        if (total <= 0) {
            jQuery(this).fadeOut('medium').replaceWith('<div style="text-align: center; background: rgba(0, 0, 0, 0.13); border-radius: 5px; height: 80px; line-height: 80px; font-size: 18px; color: red;">' + M.util.get_string('timesup', 'quiz') + '</div>');
        }
    }

});
{{/js}}
